<?xml version="1.0"?>
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" elementFormDefault="qualified">

   <xs:include schemaLocation="../SharedDatas.xsd"/>
   <xs:include schemaLocation="AttacksDatas.xsd"/>

   <xs:element name="EnemiesDatas">
      <xs:complexType>
         <xs:sequence>
            <xs:element name="EnemyDatas" minOccurs="0" maxOccurs="unbounded">
               <xs:complexType>
                  <xs:sequence>
                     <xs:element name="Health" type="xs:positiveInteger" minOccurs="1" maxOccurs="1"/>
                     <xs:element name="WalkSpeed" type="xs:float" minOccurs="1" maxOccurs="1"/>
                     <xs:element name="RunSpeed" type="xs:float" minOccurs="1" maxOccurs="1"/>
                     <xs:element name="HurtDur" type="xs:float" minOccurs="1" maxOccurs="1"/>
                     <xs:element name="PlayerDetectionDist" type="xs:float" minOccurs="1" maxOccurs="1"/>
                     <xs:element name="PlayerLoseDist" type="xs:float" minOccurs="1" maxOccurs="1"/>
                     <xs:element name="Physics" minOccurs="1" maxOccurs="1">
                        <xs:complexType>
                           <xs:sequence>
                              <xs:element name="Jump" minOccurs="1" maxOccurs="1">
                                 <xs:complexType>
                                    <xs:sequence>
                                       <xs:element name="Height" minOccurs="1" maxOccurs="1"/>
                                       <xs:element name="ApexDur" minOccurs="1" maxOccurs="1"/>
                                    </xs:sequence>
                                 </xs:complexType>
                              </xs:element>
                              <xs:element name="HurtCheckEdge" minOccurs="1" maxOccurs="1"/>
                           </xs:sequence>
                        </xs:complexType>
                     </xs:element>
                     <xs:element name="Behaviours" minOccurs="1" maxOccurs="1">
                        <xs:complexType>
                           <xs:sequence>
                              <xs:element name="Behaviour" minOccurs="1" maxOccurs="unbounded">
                                 <xs:complexType>
                                    <xs:sequence>
                                       <xs:element name="Conditions" type="Conditions" minOccurs="0" maxOccurs="1"/>
                                       <xs:element name="Actions" type="Actions" minOccurs="1" maxOccurs="1"/>
                                    </xs:sequence>
                                    <xs:attribute name="Name" type="xs:token" use="required"/>
                                 </xs:complexType>
                              </xs:element>
                           </xs:sequence>
                        </xs:complexType>
                     </xs:element>
                     <xs:element name="OnKilledTrauma" type="xs:float" minOccurs="0" maxOccurs="1"/>
                     <xs:element name="OnKilledLoot" type="LootDatas" minOccurs="0" maxOccurs="1"/>
                  </xs:sequence>
                  <xs:attribute name="Id" type="xs:token" use="required"/>
               </xs:complexType>
            </xs:element>
         </xs:sequence>
      </xs:complexType>
   </xs:element>



   <!-- ████████████ -->
   <!--  CONDITIONS  -->
   <!-- ████████████ -->

   <xs:complexType name="Conditions">
      <xs:sequence>
         <xs:element name="LastActionsCheck" type="LastActionsCheckCondition" minOccurs="0" maxOccurs="unbounded"/>
         <xs:element name="FullHealth" type="FullHealthCondition" minOccurs="0" maxOccurs="1"/>
         <xs:element name="HealthCurrentMax" type="HealthCurrentCondition" minOccurs="0" maxOccurs="1"/>
         <xs:element name="HealthCurrentMin" type="HealthCurrentCondition" minOccurs="0" maxOccurs="1"/>
         <xs:element name="HealthPercentageMax" type="HealthPercentageCondition" minOccurs="0" maxOccurs="1"/>
         <xs:element name="HealthPercentageMin" type="HealthPercentageCondition" minOccurs="0" maxOccurs="1"/>
         <xs:element name="MaxHeightOffset" type="MaxHeightOffsetCondition" minOccurs="0" maxOccurs="1"/>
         <xs:element name="PlayerAbove" type="PlayerAboveCondition" minOccurs="0" maxOccurs="1"/>
         <xs:element name="PlayerAlive" type="PlayerAliveCondition" minOccurs="0" maxOccurs="1"/>
         <xs:element name="PlayerDetected" type="PlayerDetectedCondition" minOccurs="0" maxOccurs="1"/>
         <xs:element name="PlayerInRange" type="PlayerInRangeCondition" minOccurs="0" maxOccurs="1"/>
         <xs:element name="RandomChance" type="RandomChanceCondition" minOccurs="0" maxOccurs="1"/>
      </xs:sequence>
   </xs:complexType>

   <xs:complexType name="Condition">
      <xs:attribute name="Negate" type="xs:boolean" use="optional"/>
   </xs:complexType>

   <xs:complexType name="FullHealthCondition">
      <xs:complexContent>
         <xs:extension base="Condition"/>
      </xs:complexContent>
   </xs:complexType>

   <xs:complexType name="HealthCurrentCondition">
      <xs:complexContent>
         <xs:extension base="Condition">
            <xs:attribute name="Threshold" type="xs:positiveInteger" use="required"/>
         </xs:extension>
      </xs:complexContent>
   </xs:complexType>

   <xs:complexType name="HealthPercentageCondition">
      <xs:complexContent>
         <xs:extension base="Condition">
            <xs:attribute name="Threshold" type="xs:float" use="required"/>
         </xs:extension>
      </xs:complexContent>
   </xs:complexType>

   <xs:complexType name="LastActionsCheckCondition">
      <xs:complexContent>
         <xs:extension base="Condition">
            <xs:sequence>
               <xs:element name="Include" type="xs:token" minOccurs="0" maxOccurs="unbounded"/>
               <xs:element name="Exclude" type="xs:token" minOccurs="0" maxOccurs="unbounded"/>
            </xs:sequence>
            <xs:attribute name="ActionsCount" type="xs:positiveInteger" use="required"/>
         </xs:extension>
      </xs:complexContent>
   </xs:complexType>

   <xs:complexType name="MaxHeightOffsetCondition">
      <xs:complexContent>
         <xs:extension base="Condition">
            <xs:attribute name="Offset" type="xs:float" use="required"/>
         </xs:extension>
      </xs:complexContent>
   </xs:complexType>

   <xs:complexType name="PlayerAboveCondition">
      <xs:complexContent>
         <xs:extension base="Condition"/>
      </xs:complexContent>
   </xs:complexType>

   <xs:complexType name="PlayerAliveCondition">
      <xs:complexContent>
         <xs:extension base="Condition"/>
      </xs:complexContent>
   </xs:complexType>

   <xs:complexType name="PlayerDetectedCondition">
      <xs:complexContent>
         <xs:extension base="Condition"/>
      </xs:complexContent>
   </xs:complexType>

   <xs:complexType name="PlayerInRangeCondition">
      <xs:complexContent>
         <xs:extension base="Condition">
            <xs:attribute name="Range" type="xs:float" use="required"/>
         </xs:extension>
      </xs:complexContent>
   </xs:complexType>

   <xs:complexType name="RandomChanceCondition">
      <xs:complexContent>
         <xs:extension base="Condition">
            <xs:attribute name="Chance" type="xs:float" use="required"/>
         </xs:extension>
      </xs:complexContent>
   </xs:complexType>



   <!-- ███████████ -->
   <!--   ACTIONS   -->
   <!-- ███████████ -->

   <xs:complexType name="Actions">
      <xs:choice maxOccurs="unbounded">
         <xs:element name="Attack" type="AttackAction" minOccurs="0" maxOccurs="unbounded"/>
         <xs:element name="BackAndForth" type="BackAndForthAction" minOccurs="0" maxOccurs="unbounded"/>
         <xs:element name="Charge" type="ChargeAction" minOccurs="0" maxOccurs="unbounded"/>
         <xs:element name="Chase" type="ChaseAction" minOccurs="0" maxOccurs="unbounded"/>
         <xs:element name="Flee" type="FleeAction" minOccurs="0" maxOccurs="unbounded"/>
         <xs:element name="Wait" type="WaitAction" minOccurs="0" maxOccurs="unbounded"/>
      </xs:choice>
   </xs:complexType>

   <xs:complexType name="Action">
      <xs:sequence>
         <xs:element name="Conditions" type="Conditions" minOccurs="0" maxOccurs="1"/>
         <xs:element name="CantBeHurt" minOccurs="0" maxOccurs="1"/>
         <xs:element name="DontApplyGravity" minOccurs="0" maxOccurs="1"/>
      </xs:sequence>
   </xs:complexType>

   <xs:complexType name="AttackAction">
      <xs:complexContent>
         <xs:extension base="Action">
            <xs:sequence>
               <xs:element name="Delay" minOccurs="0" maxOccurs="1">
                  <xs:complexType>
                     <xs:attribute name="Min" type="xs:float" use="required"/>
                     <xs:attribute name="Max" type="xs:float" use="required"/>
                  </xs:complexType>
               </xs:element>
               <xs:element name="AnimatorId" type="xs:token" minOccurs="1" maxOccurs="1"/>
               <xs:element name="AnimatorEnemyIdOverride" type="xs:token" minOccurs="0" maxOccurs="1"/>
            </xs:sequence>
            <xs:attribute name="Id" type="xs:token" use="required"/>
         </xs:extension>
      </xs:complexContent>
   </xs:complexType>

   <xs:complexType name="BackAndForthAction">
      <xs:complexContent>
         <xs:extension base="Action">
            <xs:sequence>
               <xs:element name="Range" type="xs:float" minOccurs="1" maxOccurs="1"/>
               <xs:element name="Pause" minOccurs="0" maxOccurs="1">
                  <xs:complexType>
                     <xs:attribute name="Min" type="xs:float" use="required"/>
                     <xs:attribute name="Max" type="xs:float" use="required"/>
                  </xs:complexType>
               </xs:element>
               <xs:element name="RangeFluctuationOnPause" type="xs:float" minOccurs="0" maxOccurs="1"/>
            </xs:sequence>
         </xs:extension>
      </xs:complexContent>
   </xs:complexType>

   <xs:complexType name="ChargeAction">
      <xs:complexContent>
         <xs:extension base="Action">
            <xs:sequence>
               <xs:element name="AnticipationDuration" type="xs:float" minOccurs="1" maxOccurs="1"/>
               <xs:element name="InitSpeed" type="xs:float" minOccurs="1" maxOccurs="1"/>
               <xs:element name="Acceleration" type="xs:float" minOccurs="1" maxOccurs="1"/>
               <xs:element name="MaxDuration" type="xs:float" minOccurs="0" maxOccurs="1"/>
               <xs:element name="PlayerCollision" type="ChargeCollision" minOccurs="0" maxOccurs="1"/>
               <xs:element name="WallCollision" type="ChargeCollision" minOccurs="0" maxOccurs="1"/>
            </xs:sequence>
         </xs:extension>
      </xs:complexContent>
   </xs:complexType>

   <xs:complexType name="ChargeCollision">
      <xs:sequence>
         <xs:element name="AttackId" type="xs:token" minOccurs="0" maxOccurs="1"/>
         <xs:element name="Stun" minOccurs="0" maxOccurs="1">
            <xs:complexType>
               <xs:attribute name="Dur" type="xs:float" use="required"/>
               <xs:attribute name="Delay" type="xs:float" use="optional"/>
            </xs:complexType>
         </xs:element>
         <xs:element name="CantSuicide" minOccurs="0" maxOccurs="1"/>
         <xs:element name="Trauma" type="TraumaDatas" minOccurs="0" maxOccurs="1"/>
      </xs:sequence>
   </xs:complexType>

   <xs:complexType name="ChaseAction">
      <xs:complexContent>
         <xs:extension base="Action"/>
      </xs:complexContent>
   </xs:complexType>

   <xs:complexType name="FleeAction">
      <xs:complexContent>
         <xs:extension base="Action">
            <xs:sequence>
               <xs:element name="FacePlayer" minOccurs="0" maxOccurs="1"/>
               <xs:element name="WalkAnimationMultiplier" type="xs:float" minOccurs="0" maxOccurs="1"/>
            </xs:sequence>
         </xs:extension>
      </xs:complexContent>
   </xs:complexType>

   <xs:complexType name="WaitAction">
      <xs:complexContent>
         <xs:extension base="Action">
            <xs:sequence>
               <xs:element name="FacePlayer" minOccurs="0" maxOccurs="1"/>
            </xs:sequence>
         </xs:extension>
      </xs:complexContent>
   </xs:complexType>

</xs:schema>