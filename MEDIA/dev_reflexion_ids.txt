Objectif: permettre d'identifier les objets du jeu de manière unique.
Points importants:
	- ne pas dépendre d'une scène
	- générique (pour les items, les checkpoints, les scènes, les NPC, etc.)
	
Idée: passer par des ScriptableObjects
	- Propriété commune "ID" qui serait une string
	- Pourquoi pas ajouter un int en tant que suffixe
	- Pourrait permettre de différencier les objets par le type de l'objet (ItemIdentifier : Identifier, CheckpointIdentifier : Identifier, etc.)
	- A référencer ensuite dans les objets de la scène
	- Interface IIdentifiedEntity qui référence un Identifier ? Avec le manager qui va avec ?
	
	
Ce système devrait alors venir avec un FlagManager pour tracker les avancée contextuelles du jeu. Quelques exemples:
	- OnItemPickedUp -> enregistre le fait que l'item avec l'ID XXX a été ramassé. Au loading, on peut ainsi distribuer aux IIdentifiedEntity les informations, et l'item qui a déjà été ramassé pourra ainsi se désactiver tout seul.
	- OnBoardDiscovered -> enregistre le fait qu'un tableau a été découvert, pour potentiellement l'ajouter à une minimap, ou alors ne plus cacher l'accès à un tableau secret car plus besoin de le faire après que celui-ci ait été découvert.
	- OnUniqueEnemyKilled -> enregistre le fait qu'un ennemi unique a été tué afin qu'il ne respawn plus.
	- OnTriggerableTriggered
	- etc.
	
Ce FlagManager devrait être très abstrait (uniquement des données primitives) afin de pouvoir être sauvegardé rapidement. A base de List<string> pour les catégories ItemsPickedUp, par exemple. Ou Dictionary<string, int> pour les triggerables et le nombre de triggers.
A sauvegarder directement dans Game.xml dans une balise <Flags>.
A voir comment on l'intègre dans le flow. Ca devrait suffir de le loader à l'Awake, avant tout le reste, et que les entités qui en ont besoin viennent piocher dedans.