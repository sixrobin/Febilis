Il faudrait une classe Speaker qui soit un Interactable
A l'interaction :
	- le templier se positionne au point de dialogue (Transform set dans Speaker, qui peut être null)
	- il faut freeze les inputs du templier (méthode AllowInputs() ?)
	- on joue le dialogue
	
Il faudrait que le templier joue une anim d'écoute quand il ne parle pas, et une anim de parole quand c'est lui qui répond
on peut étendre ce comportement à tous les speakers :

Interface ISpeaker :
	- string SpeakerId
	- bool isDialoguing
	- OnSentenceStart()
	- OnSentenceStop()
	- OnSentenceCallback(string callbackId) -> pour récup les callback du xml et les traiter ?
	
-> il faut donc passer au DialogueManager les speakers en param
	- comment différencier les sentences qui sont celles du joueur et celles du other ?
		- si chaque ISpeaker a son Id correctement set, alors le tag SpeakerId du xml doit suffir techniquement mais à voir si pas trop relou
		- dans DialogueManager, un dico <string speakerId, ISpeaker speaker> pour référencer tous les speakers ?
	
on aimerait sans doute une classe PlayerDialogueController pour ne pas encore foutre un truc dans PlayerController

On voudra sans doute qu'au début ou à la fin de certains dialogues, le personnage gagne un objet, le donne, ou gagne du fric, etc.
-> il faut donc réfléchir à une façon de gérer ça.
	- pas dans DialoguesDatas.xml qui devrait plutôt gérer les phrases en elles-mêmes, les anims, tout ça
	- réfléchir à un "DialoguesCallbacksDatas.xml" dans lequel, pour un DialogueId, on peut renseigner un PreCallback et PostCallback ?




Il faut trouver une façon d'enchaîner les dialogues pour chaque NPC.
-> Les NPC ont un SpeakerId, qu'on peut utiliser pour récupérer leur arbre de dialogues.
-> Je pense à un système de Behaviour Tree, où on prend dans l'ordre toutes les phrases existantes et on prend la première qui remplit des conditions données.
-> Il faudrait donc des conditions (avec le negate) :
	- DialogueAlreadyDone
	- PlayerOwnsItem (quantity)
	- CurrentZoneIdEquals
	- DialogueNeverDone
	- ...
	
Utiliser les ContextualConditions ?